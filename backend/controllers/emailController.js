require('dotenv').config();
const nodemailer = require('nodemailer');
const { PDFDocument, StandardFonts } = require("pdf-lib");

let sendSimpleEmail = async (dataSend) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
            user: process.env.EMAIL_APP,
            pass: process.env.EMAIL_APP_PASSWORD
        }
    });

    let info = await transporter.sendMail({
        from: '"ThuyDuong üëª" <httd343@gmail.com>', // sender address
        to: dataSend.recieverEmail, // list of receivers
        subject: "M√£ OTP giao d·ªãch chuy·ªÉn kho·∫£n.", // Subject line
        html: getBodyHTMLEmail(dataSend),
    });
}

let getBodyHTMLEmail = (dataSend) => {
    let result = `
        <div>
        <p>M√£ OTP x√°c th·ª±c giao d·ªãch l√† ${dataSend.otpCode}</p>
        <p>Hi·ªáu l·ª±c c·ªßa m√£ l√† 1 ph√∫t.</p>
        <p>Chi ti·∫øt giao d·ªãch: Chuy·ªÉn kho·∫£n nhanh qua s√¥ TK, s·ªë ti·ªÅn ${dataSend.amount}</p>
        <p>Vui l√≤ng nh·∫≠p m√£ x√°c th·ª±c ƒë·ªÉ ho√†n t·∫•t qu√° tr√¨nh giao d·ªãch.</p>
        </div>
        <div>Xin ch√¢n th√†nh c·∫£m ∆°n.</div>
        `
    return result;
}

let sendInvoiceEmail = async (dataSend) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 465,
        secure: true,
        auth: {
            user: process.env.EMAIL_APP,
            pass: process.env.EMAIL_APP_PASSWORD
        }
    });

    const pdfBytes = await createCustomizedPDF();
    const pdfBuffer = Buffer.from(pdfBytes);

    let info = await transporter.sendMail({
        from: '"ThuyDuong üëª" <httd343@gmail.com>', // sender address
        to: dataSend.recieverEmail, // list of receivers
        subject: "Th√¥ng b√°o v·ªÅ vi·ªác ph√°t h√†nh H√≥a ƒë∆°n ƒëi·ªán t·ª≠", // Subject line
        html: getBodyHTMLEInvoice(dataSend),
        attachments: [
            {
                filename: "customized.pdf",
                content: pdfBuffer,
                cid: "pdfFile",
            },
        ],
    });
}

let getBodyHTMLEInvoice = (dataSend) => {
    let result = `
        <p>K√≠nh g·ª≠i Qu√Ω kh√°ch h√†ng,</p>
        
        <p>ƒê∆°n v·ªã TR∆Ø·ªúNG ƒê·∫†I H·ªåC T√îN ƒê·ª®C TH·∫ÆNG v·ª´a ph√°t h√†nh h√≥a ƒë∆°n ƒëi·ªán t·ª≠ c·ªßa Qu√Ω kh√°ch h√†ng ${dataSend.studentName}.</p>
        
        <p>H√≥a ƒë∆°n c·ªßa kh√°ch h√†ng c√≥:</p>
        <p>- S·ªë h√≥a ƒë∆°n: ${dataSend.transferId}</p>
        <p>- T√™n kh√°ch h√†ng: ${dataSend.studentName}</p>
        
        <p>ƒê·ªÉ t·∫£i h√≥a ƒë∆°n PDF: <a href="cid:pdfFile">Click v√†o ƒë√¢y ƒë·ªÉ t·∫£i PDF v·ªÅ m√°y</a></p>
        
        <p>Tr√¢n tr·ªçng c·∫£m ∆°n Qu√Ω kh√°ch v√† ch√∫c Qu√Ω kh√°ch nhi·ªÅu th√†nh c√¥ng khi s·ª≠ d·ª•ng d·ªãch v·ª•!</p>
        `
    return result;
}

const createCustomizedPDF = async () => {
    const pdfDoc = await PDFDocument.create();
    const page = pdfDoc.addPage();
    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);
    const textSize = 30;
    const text = "Hello, World!";
    page.drawText(text, { x: 50, y: 50, size: textSize, font });

    return await pdfDoc.save();
};


module.exports = {
    sendSimpleEmail, getBodyHTMLEmail, sendInvoiceEmail, getBodyHTMLEInvoice, createCustomizedPDF
}